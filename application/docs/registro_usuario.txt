Procedimiento almacenad: 
KO_SP_USUARIO_INS(
)

KO_SP_USUARIO_PORTAL_INS(
K_APODO,
K_CLAVE,
K_EMAIL,
K_NOM,
K_APEL,
K_UBIGEO_ID,
K_LOCALIDAD
K_FONO1,
K_FONO1_ANEXO,
K_FONO2,
K_ACEP_PUBLIC --ACEPTA PUBLICIDAD
)
--INSERTA DATOS EN TABLA USUARIO Y USUARIO PORTAL
RETURNS(
        K_ID , --ID DE USUARIO GENERADO , SI ES NULO ES ERROR
        K_ERROR, --0 NO HAY ERROR, OTRO
        K_MSG, -- 1 EL APODO EXISTE EN LA BASE, 2 EL EMAIL EXISTE, 3 OTRO ERROR DEVOLVER EL MENSAJE DE ERROR, EN CASO CONTRARIO NULL
)

var V_NUEVO_ID

--LLAMA KO_SP_USUARIO_INS()


KO_SP_UP_ACTUALIZAR_MAIL_RET(K_ID, K_EMAIL)
RETURNS
(
K_RET --0 OK SE CAMBIO SATISFACTORIAMENTE 
K_MSG --ERROR 1: EMAIL EXISTE 2: OTROS
)

KO_SP_USUARIO_PORTAL_UPD() --REVISAR MODIFICAR USUARIO

KO_SP_UP_AGREGAR_TIPO_DOC_RET(
K_ID, --ID DE USUARIO
K_TIPO_DOC_ID, --TIPO DE DOCUMENTO
)
RETURNS
(
K_RET --0 OK SE CAMBIO SATISFACTORIAMENTE --1 ERROR 
K_MSG --ERROR 1: DNI EXISTE 2: OTROS 
)


KO_SP_LISTA_USUARIO_RECIBEN_BOLETIN_QRY
RETURNS (
K_ID,
K_APODO,
K_EMAIL,
K_NOM,
K_APEL,
); --DEVUELVE LA LISTA DE USUARIOS QUE RECIBEN BOLETINX
DEPENDE DEL CAMPO ACEPTA_PUB (SI ACEPTA PUBLICACION)

KO_SP_USUARIO_PORTAL_ESTADO_QRY(
K_ID
)
RETURNS(
K_EST , --ESTADO DE USUARIO
K_RET --0 OK SE CAMBIO SATISFACTORIAMENTE --1 ERROR 
K_MSG --ERROR 1: EL USUARIO NO EXISTE 2: OTROS 
)


