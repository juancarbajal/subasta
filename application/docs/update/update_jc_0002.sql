
ALTER PROCEDURE [dbo].[KO_SP_HISTORIAL_VENTA_QRY]
@K_ID_USR BIGINT
, @K_APODO VARCHAR(30) =''
, @K_CATEGORIA INTEGER = -1
, @K_CALIFICACION INTEGER = -1
, @K_DIAS INTEGER = -1
, @K_ESTADO INTEGER = -1 /*Estado de Calificacion*/

AS BEGIN
   SET NOCOUNT OFF
   DECLARE @V_HOY DATETIME = GETDATE();
   DECLARE @V_MAX_CALIFICAR INTEGER = (SELECT CAST(VALOR1 AS INTEGER)
 FROM KO_PARAMETRO WHERE DES = 'Dias para calificar');

   SELECT * FROM (
   SELECT COM.ID_USR AS COMPRADOR_ID
   ,COM_WEB.APODO AS COMPRADOR_APODO
   ,COM.NOM + ' ' + COM.APEL AS COMPRADOR_NOM
   ,COM.EMAIL AS COMPRADOR_EMAIL
   ,COM.FONO1 AS COMPRADOR_FONO1
   ,COM.FONO2 AS COMPRADOR_FONO2
   ,PJ.PUNTAJE AS COMPRADOR_PUNTAJE
   ,AGC.L1 AS AVISO_CATEGORIA_ID
   ,AGC.L1_NOM AS AVISO_CATEGORIA_NOM
   ,AVI.ID_AVISO AS AVISO_ID
   ,AVI.TIT AS AVISO_TIT
   ,TRA.ID_TRANSACCION AS TRANSACCION_ID
   ,TRA.FEC_REG AS TRANSACCION_FEC
   ,CONVERT(VARCHAR,TRA.FEC_REG,103) + ' ' + convert(VARCHAR,TRA.FEC_REG, 8) AS TRANSACCION_FEC_NOR
   ,TRA.ID_ESTADO_TRANSACCION  AS TRANSACCION_EST/*ESTADO DE TRANSACCION : 1 CERRADO, 3: PENDIENTE POR CALIFICAR*/
   , (SELECT CALV.ID_ESCALA
       FROM KO_CALIFICACION CALV
       WHERE CALV.ID_TRANSACCION = TRA.ID_TRANSACCION
       AND CALV.ID_USR = @K_ID_USR) AS CALIFICACION_VENDEDOR
   , (SELECT CALC.ID_ESCALA
       FROM KO_CALIFICACION CALC
       WHERE CALC.ID_TRANSACCION = TRA.ID_TRANSACCION
       AND CALC.ID_USR <> @K_ID_USR) AS CALIFICACION_COMPRADOR
   ,@V_MAX_CALIFICAR - DATEDIFF(DAY, TRA.FEC_REG, @V_HOY ) AS CALIFICACION_DIAS
   ,OFER.CANT AS OFERTA_CANTIDAD
   ,OFER.PRECIO_BASE AS OFERTA_PRECIO
   ,MON.SIMB AS OFERTA_MONEDA
   ,AVI.ID_TIPO_AVISO AS AVISO_TIPO
   FROM KO_AVISO AVI
   INNER JOIN KO_OFERTA OFER ON AVI.ID_AVISO = OFER.ID_AVISO
   INNER JOIN KO_TRANSACCION TRA ON OFER.ID_OFERTA= TRA.ID_OFERTA
/*TODAS LAS OFERTAS Q TENGAN TRANSACCION */
   INNER JOIN KO_USUARIO COM ON OFER.ID_USR = COM.ID_USR
   INNER JOIN KO_USUARIO_PORTAL COM_WEB ON COM.ID_USR = COM_WEB.ID_USR
   INNER JOIN KO_REPUTACION PJ ON COM.ID_USR = PJ.ID_USR
   INNER JOIN KO_AVISO_CATEGORIA AC ON AVI.ID_AVISO = AC.ID_AVISO
   INNER JOIN KO_AGRUPADOR AGC ON AC.ID_CATEGORIA = AGC.ID_CATEGORIA
   INNER JOIN KO_MONEDA MON ON AVI.ID_MONEDA=MON.ID_MONEDA
   WHERE AVI.ID_USR = @K_ID_USR
   AND ((TRA.ID_ESTADO_TRANSACCION = 1) or (TRA.ID_ESTADO_TRANSACCION = 3))
   AND COM_WEB.APODO LIKE  '%' + @K_APODO + '%'
   ) M
   WHERE
   (CALIFICACION_DIAS>=0  OR ( (CALIFICACION_VENDEDOR IS NOT NULL ) AND (CALIFICACION_COMPRADOR IS NOT NULL )))
   AND
       CASE WHEN @K_CATEGORIA = -1 /*Categoria*/
           THEN 1
           ELSE CASE WHEN AVISO_CATEGORIA_ID = @K_CATEGORIA
                THEN 1 ELSE 0 END
       END = 1
   AND CASE WHEN @K_CALIFICACION = -1 /*Calificacion*/
           THEN 1
           ELSE CASE WHEN M.CALIFICACION_VENDEDOR=@K_CALIFICACION
                THEN 1 ELSE 0 END
       END = 1
   AND CASE WHEN @K_DIAS = -1 /*Filtro por dias*/
           THEN 1
           ELSE CASE WHEN @K_DIAS=0
                THEN CASE WHEN CONVERT(VARCHAR,M.TRANSACCION_FEC,103)=CONVERT(VARCHAR,@V_HOY,103)
                	 THEN 1 ELSE 0 END
                ELSE CASE WHEN DATEDIFF(DAY, M.TRANSACCION_FEC, @V_HOY) <=@K_DIAS  /*Filtro por fecha*/
                     THEN 1 ELSE 0 END
           END
       END = 1
   AND CASE WHEN (@K_ESTADO = -1) /*FILTRO POR ESTADO de Calificacion*/
       THEN 1
       ELSE CASE WHEN @K_ESTADO=1
            THEN CASE WHEN M.CALIFICACION_VENDEDOR>0
                 THEN 1 ELSE 0 END
            ELSE CASE WHEN @K_ESTADO=2
                 THEN CASE WHEN M.CALIFICACION_VENDEDOR IS NULL
                      THEN 1 ELSE 0 END
                 ELSE CASE WHEN M.CALIFICACION_COMPRADOR IS NULL
                      THEN 1 ELSE 0 END
                 END
            END
        END =1
      ORDER BY CAST(M.TRANSACCION_FEC as date) DESC, COMPRADOR_APODO ASC
, convert(VARCHAR,M.TRANSACCION_FEC, 8) desc
   SET NOCOUNT OFF
END
GO
